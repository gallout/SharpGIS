<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="MapObjectConfig" type="ITS.MapObjects.BaseMapObject.Config.MapObjectSection, ITS.MapObjects.BaseMapObject" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" requirePermission="true" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching" requirePermission="true" />
  </configSections>

  <appSettings>
    <add key="updateServer" value="app.i-gis.ru:8731" />
  </appSettings>
  
  <MapObjectConfig>
    <InternalMapObjects>
      <mapObject name="Загрузчик карты" assembly="ITS.MapObjects.NormalBackingMapObject.dll" />
      <mapObject name="Редактор пользователей" assembly="ITS.MapObjects.ProgramUserMapObject.dll" />
      <mapObject name="Редактор геометрий" assembly="ITS.MapObjects.EditGeometryPlugin.dll" />
      <mapObject name="Основные справочники" assembly="ITS.MapObjects.EditBaseDictionariesPlugin.dll" />
      <mapObject name="Конвертор AutoCAD" assembly="ITS.MapObjects.AutoCADPlugin.dll" />
      <mapObject name="Конвертор MapInfo" assembly="ITS.MapObjects.MapInfoPlugin.dll" />
      <mapObject name="Конвертор PTV Vision" assembly="ITS.MapObjects.PTVVisionPlugin.dll" />
    </InternalMapObjects>
    <ExternalMapObjects></ExternalMapObjects>
  </MapObjectConfig>
  
  <loggingConfiguration tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" formatter="Text Formatter" fileName="%AppData%\ITSGIS\log_client.txt" />
      <add name="Gelf Listener" type="ITS.ProjectBase.Utils.ExceptionLogging.TraceListeners.GelfTraceListener, ITS.ProjectBase.Utils"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
        grayLogServerHost="mars.itsgis.ru" grayLogServerPort="12201" additionalFields="_from:ITSGIS Core Client" facility="1" formatter="Gelf Formatter"/>
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="Timestamp: {timestamp}{newline} Message: {message}{newline} Category: {category}{newline} Priority: {priority}{newline} EventId: {eventid}{newline} Severity: {severity}{newline} Title:{title}{newline} Machine: {localMachine}{newline} App Domain: {localAppDomain}{newline} ProcessId: {localProcessId}{newline} Process Name: {localProcessName}{newline} Thread Name: {threadName}{newline} Win32 ThreadId:{win32ThreadId}{newline} Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter" />
      <add type="ITS.ProjectBase.Utils.ExceptionLogging.Formatters.GelfFormatter, ITS.ProjectBase.Utils" name="Gelf Formatter"/>
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Flat File Trace Listener" />
          <add name="Gelf Listener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors Warnings">
        <listeners>
          <add name="Flat File Trace Listener" />
          <add name="Gelf Listener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  
  <exceptionHandling>
    <exceptionPolicies>
      <add name="AbstractManagerPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
              <add name="Base Fault Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.BaseFaultHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="ChannelCreatorPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
              <add name="Base Exception Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.BaseExceptionHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="SecurityPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="AccessPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Access Denied Exception Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.AccessDeniedHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="GeoAccessPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Geo Access Denied Fault Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.GeoAccessDeniedHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="AuthorizationPolicy">
        <exceptionTypes>
          <add name="Its Authorization" type="ITS.Client.Core.Exceptions.ItsAuthorizationException, ITS.Client.Core" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Client Exception Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.ClientExceptionHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="ClientPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
              <add name="Client Exception Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.ClientExceptionHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="PluginPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
              <add name="Client Exception Handler" type="ITS.ProjectBase.Utils.ExceptionHandling.ExceptionHandlers.PluginExceptionHandler, ITS.ProjectBase.Utils" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="JustLogPolicy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  
  <cachingConfiguration defaultCacheManager="ITSGIS Cache Manager">
    <cacheManagers>
      <add name="ITSGIS Cache Manager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching" expirationPollFrequencyInSeconds="300" maximumElementsInCacheBeforeScavenging="50" numberToRemoveWhenScavenging="1" backingStoreName="ITSGIS Isolated Storage Cache" />
    </cacheManagers>
    <backingStores>
      <add name="ITSGIS Isolated Storage Cache" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching" encryptionProviderName="" partitionName="itsgis" />
    </backingStores>
  </cachingConfiguration>
 
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
</configuration>